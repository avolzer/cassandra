{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","console","log","data","steps","useState","currQuestion","setCurrQuestion","className","style","paddingLeft","paddingRight","question","Button","variant","onClick","choices","goto","choice","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,0BCmCAA,MA3Bf,WACEC,QAAQC,IAAIC,EAAKC,MAAM,IACvB,MAAwCC,mBAASF,EAAKC,MAAM,IAA5D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,mBAAGC,MAAO,CAACC,YAAY,IAAKC,aAAa,KAAzC,SACGL,EAAaM,WAGhB,sBAAKJ,UAAU,eAAf,UACN,cAACK,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,WAAKR,EAAgBJ,EAAKC,MAAME,EAAaU,QAAQ,GAAGC,QAAzF,SACCX,EAAaU,QAAQ,GAAGE,SAExBZ,EAAaU,QAAQG,OAAS,GAC/B,cAACN,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,WAAKR,EAAgBJ,EAAKC,MAAME,EAAaU,QAAQ,GAAGC,QAA7F,SACCX,EAAaU,QAAQ,GAAGE,kBCZZE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e0a8f42b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport data from './storySteps.json';\nimport React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  console.log(data.steps[0]);\n  const [currQuestion, setCurrQuestion] = useState(data.steps[0])\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p style={{paddingLeft:100, paddingRight:100}}>\n          {currQuestion.question}\n        </p>\n       \n        <div className=\"d-grid gap-2\">\n  <Button variant=\"light\" onClick={()=>{setCurrQuestion(data.steps[currQuestion.choices[0].goto])}}>\n  {currQuestion.choices[0].choice}\n  </Button>\n  {currQuestion.choices.length > 1 && \n  <Button variant=\"secondary\" onClick={()=>{setCurrQuestion(data.steps[currQuestion.choices[1].goto])}}>\n  {currQuestion.choices[1].choice}\n  </Button>\n}\n</div>\n        \n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}